/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/mouse.h>

#define QWERTY  0
#define COLEMAK 1
#define ARTSEY	2
#define SYS	3
#define SYMBOLS 4
#define KEYBO   5
#define STENO   6
#define FUNC    7
#define NAV     8
#define MOUSE   9

&mt {
  //  flavor = "tap-preferred";
   // tapping_term_ms = <200>;
};

/ {
    macros {
    ZMK_MACRO(acentoa, wait-ms = <30>; tap-ms = <40>;
        bindings = <&kp LBKT &kp A>;)
    ZMK_MACRO(acentoe, wait-ms = <30>; tap-ms = <40>;
        bindings = <&kp LBKT &kp E>;)
    ZMK_MACRO(acentoi, wait-ms = <30>; tap-ms = <40>;
        bindings = <&kp LBKT &kp I>;)
    ZMK_MACRO(acentoo, wait-ms = <30>; tap-ms = <40>;
        bindings = <&kp LBKT &kp O>;)
    ZMK_MACRO(acentou, wait-ms = <30>; tap-ms = <40>;
        bindings = <&kp LBKT &kp U>;)
    ZMK_MACRO(diereisu, wait-ms = <30>; tap-ms = <40>;
        bindings = <&kp LS(LBKT) &kp U> ;)
    ZMK_MACRO(mcion, wait-ms = <30>; tap-ms = <40>;
        bindings = <&kp C &kp I &kp LBKT &kp O &kp N>;)
    ZMK_MACRO(mnon, wait-ms = <30>; tap-ms = <40>;
        bindings = <&kp SCLN &kp LBKT &kp O &kp N>;)

    };
};

/ { 

    combos {
        compatible = "zmk,combos";
         combo_shift {
            timeout-ms = <50>;
            key-positions = <10 11>;
            bindings = <&sk LSHIFT>;
        };
	combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };
        
         combo_tab {
            timeout-ms = <50>;
            key-positions = <23 26>;
            bindings = <&kp TAB>;
        };
        
            combo_ralt {
            timeout-ms = <50>;
            key-positions = <17 16>;
            bindings = <&kp RALT>;
        };
        
                    combo_lalt {
            timeout-ms = <50>;
            key-positions = <11 12>;
            bindings = <&kp LALT>;
        };
        
                           combo_lgui {
            timeout-ms = <50>;
            key-positions = <12 13>;
            bindings = <&kp LGUI>;
        };
        
           combo_rgui {
            timeout-ms = <50>;
            key-positions = <17 18>;
            bindings = <&kp RGUI>;
        };
           combo_colemak {
            timeout-ms = <50>;
            key-positions = <0 9>;
            bindings = <&to COLEMAK>;
            layers = <QWERTY>;
        };
           combo_qwerty {
            timeout-ms = <50>;
            key-positions = <0 9>;
            bindings = <&to QWERTY>;
            layers = <COLEMAK>;
        };
           combo_repeat {
            timeout-ms = <50>;
            key-positions = <13 16>;
            bindings = <&key_repeat>;
        };
           combo_nav {
            timeout-ms = <50>;
            key-positions = <7 16 18>;
            bindings = <&tog NAV>;
            layers = <QWERTY COLEMAK ARTSEY NAV>;
        };
           combo_mouse {
            timeout-ms = <50>;
            key-positions = <6 17 8>;
            bindings = <&tog MOUSE>;
            layers = <QWERTY COLEMAK ARTSEY MOUSE>;
        };
           combo_queston1 {
            timeout-ms = <50>;
            key-positions = <6 16>;
            bindings = <&kp UNDER>;
            layers = <QWERTY COLEMAK ARTSEY>;
        };
           combo_queston2 {
            timeout-ms = <50>;
            key-positions = <6 16>;
            bindings = <&kp LS(EQUAL)>;
            layers = <QWERTY COLEMAK ARTSEY>;
        };
           combo_boot {
            timeout-ms = <50>;
            key-positions = <0 1 5 15>;
            bindings = <&bootloader>;
            layers = <QWERTY COLEMAK ARTSEY>;
        };



        
    };

        keymap {
                compatible = "zmk,keymap";
                
       		default0_layer {
		bindings = <
		&kp Q	    &kp W &kp E &kp R &kp T 				&kp Y &kp U  &kp I    &kp O   &kp P 
		&kp A	    &kp S &kp D &kp F &kp G 			       	&kp H &kp J  &kp K    &kp L   &mt LSFT SCLN
		&mt LCTRL Z &mt LALT X &mt RALT C &kp V &kp B		        &kp N &kp M  &mt RALT CMMA &mt LALT DOT &mt LCTRL RET
          				&lt SYMBOLS BKSP &kp LGUI  		&sl STENO &lt SYS SPC 
		>;
		};

       		colemak1_layer {
		bindings = <
		&kp Q &kp W &kp F &kp P &kp B 					&kp J &kp L  &kp U    &kp Y   &kp SCLN
		&mt LSFT A &kp R &kp S &kp T &kp G 			        &kp M &kp N  &kp E    &kp I   &kp O
		&mt LCTRL Z &mt LALT X &mt RALT C  &kp D &kp V		        &kp K &kp H  &mt RALT CMMA &mt LALT DOT &mt LCTRL RET
          				&lt SYMBOLS  BKSP &kp LGUI  		&sl STENO &lt SYS SPC 
		>;
		};

       		artsey2_layer {
		bindings = <
		&kp Q &kp W &kp F &kp P &kp B 					&kp J &kp L  &kp U    &kp Y   &kp SCLN
		&mt LSFT A &kp R &kp S &kp T &kp G 			        &kp M &kp N  &kp E    &kp I   &kp O
		&mt LCTRL Z &mt LALT X &mt RALT C  &kp D &kp V		        &kp K &kp H  &mt RALT CMMA &mt LALT DOT &mt LCTRL RET
          				&lt SYMBOLS BKSP &kp LGUI  		&sl STENO &lt SYS SPC 
		>;
		};

       		SYS3_layer {
		bindings = <
		&kp LG(Q) &kp LG(N4) &kp LG(N5) &kp LG(N6) &kp NUM_5	&kp NUM_6 &kp NUM_7 &kp NUM_8 &kp NUM_9 &kp NUM_0 
		&kp TAB   &kp LG(N1) &kp LG(N2) &kp LG(N3) &kp LG(N0) 	&kp MINUS &kp EQL  &kp LBKT &kp RBKT  &kp DEL 
		&kp ESC   &kp LG(N7) &kp LG(N8) &kp LG(N9) &kp TILDE2 	&kp MINUS &kp GRAVE &kp LBKT &kp RBKT  &kp DEL 
					    &kp LC(BSPC)  &kp LGUI  		&kp RGUI &mo 3 
		>;
		};
		
		SYMBOLS4_layer {
		bindings = <
		&kp BANG  &kp ATSN &kp HASH  &kp DLLR  &kp PRCT    		&kp CRRT  &kp AMPS &kp KMLT &kp LPRN &kp RPRN 
		&kp HASH  &kp QMARK  &kp FSLH  &kp COLN  &kp SCLN 		&kp MINUS &kp KP_EQUAL  &kp LBRC  &kp RBRC   &kp BKSP
		&kp LSFT  &kp KPLS &kp LBKT &kp RBKT   &kp BSLH    		&kp UNDER &kp LEFT &kp DOWN &kp UP_ARROW  &kp RIGHT
					  &kp LC(BKSP) &mo KEYBO  		&kp SPC  &mo 3 
		>;
		};	
		
		KETBO5_layer {
		bindings = <
		&kp NUM_1  &kp NUM_2    &kp NUM_3    &kp NUM_4    &kp NUM_5 			&trans &trans   &trans   &trans  &trans
		&kp F1 &kp F2 &kp F3 &kp F4 &bootloader						&trans &kp PG_UP  &kp K_VOL_UP &kp K_MUTE &trans 
		&bt BT_CLR  &bt BT_NXT &bt BT_PRV &kp F6 &kp F7   				&trans &kp PG_DN  &kp K_VOL_DN  &trans &trans   
					 &trans &trans  					&trans &trans 
		>;
		};	
        
		stenoq_layer {
		bindings = <
		&acentoa &kp ATSN &acentoe  &kp DLLR  &kp PRCT    			&kp CRRT  &acentou &acentoi &acentoo &diereisu 
		&acentoa &kp QMARK  &kp FSLH  &kp COLN  &kp SCLN 			&kp MINUS &mcion   &mnon    &kp RBRC   &kp BKSP
		&trans   &kp KPLS &kp LBKT &kp RBKT   &kp BSLH    			&kp UNDER &kp LEFT &kp DOWN &kp UP  &kp RIGHT
					 &kp LSHIFT &sl FUNC  					&trans &trans 
		>;
		};	

		function7_layer {
		bindings = <
		&kp F14 &kp F4 &kp F5 &kp F6 &kp F11 			&trans &mkp LCLK   &mmv MOVE_UP   &mkp RCLK  &trans
		&kp F15 &kp F1 &kp F2 &kp F3 &kp F12  			&trans &mmv MOVE_UP &mmv MOVE_DOWN &mmv MOVE_RIGHT &trans 
		&kp F16 &kp F7 &kp F8 &kp F9 &kp F13   			&trans &kp PG_DN   &mkp LCLK  &trans &trans   
					 &trans &trans  		&kp LGUI &trans 
		>;
		};	

		nav8_layer {
		bindings = <
		&kp F14 &kp F4 &kp F5 &kp F6 &kp F11 			&kp PG_UP   &none    &kp UP   &none     &none
		&kp F15 &kp F1 &kp F2 &kp F3 &kp F12 			&kp PG_DN   &kp LEFT &kp DOWN &kp RIGHT &none 
		&kp F16 &kp F7 &kp F8 &kp F9 &kp F13 			&kp PG_UP   &none    &kp UP   &none     &kp RET
					 &trans &trans  		&kp LGUI &trans 
		>;
		};	

		mouse9_layer {
		bindings = <
		&kp F14 &kp F4 &kp F5 &kp F6 &kp F11 			&trans &mkp LCLK   &mmv MOVE_UP   &mkp RCLK  &trans
		&kp F15 &kp F1 &kp F2 &kp F3 &kp F12  			&trans &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_RIGHT &trans 
		&kp F16 &kp F7 &kp F8 &kp F9 &kp F13   			&trans &kp PG_DN   &mkp LCLK  &trans &trans   
					 &trans &trans  		&kp LGUI &trans 
		>;
		};	
	};
};

//		function7_layer {
//		bindings = <
//		&kp F14 &kp F4 &kp F5 &kp F6 &kp F11 			&trans &trans   &trans   &trans  &trans
//		&kp F15 &kp F1 &kp F2 &kp F3 &kp F12  			&trans &kp PG_UP  &kp K_VOL_UP &kp K_MUTE &trans 
//		&kp F16 &kp F7 &kp F8 &kp F9 &kp F13   			&trans &kp PG_DN  &kp K_VOL_DN  &trans &trans   
//					 &trans &trans  		&kp LGUI &trans 
//		>;
//		};	
//
